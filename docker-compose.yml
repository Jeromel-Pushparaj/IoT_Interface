version: '3.8'

services:
  php-backend:
    build: ./backend
    container_name: php-backend
    ports:
      - "8080:80"
    volumes:
      - ./backend:/var/www/html
    depends_on:
      - mongo
      - rabbitmq
    environment:
      - DB_HOST=mongo
      - DB_PORT=27017
      - DB_NAME=iot_app
      - DB_USERNAME=admin
      - DB_PASSWORD=admin123
      - MQTT_HOST=mqtt-broker
      - MQTT_PORT=1883
    networks:
      - iot-net

  mongo:
    image: mongo:7.0
    container_name: mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
      - ./mongo/init:/docker-entrypoint-initdb.d
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin123
      MONGO_INITDB_DATABASE: iot_app
    networks:
      - iot-net

  # MongoDB Web UI for database management
  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: admin123
      ME_CONFIG_MONGODB_URL: mongodb://admin:admin123@mongo:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
    depends_on:
      - mongo
    networks:
      - iot-net

  # mqtt-broker:
  #   image: eclipse-mosquitto:latest
  #   container_name: mqtt-broker
  #   restart: unless-stopped
  #   ports:
  #     - "1883:1883"   # MQTT
  #     - "9001:9001"   # WebSocket
  #   volumes:
  #     - ./mqtt-broker/mosquitto.conf:/mosquitto/config/mosquitto.conf
  #     - ./mqtt-broker/data:/mosquitto/data
  #     - ./mqtt-broker/logs:/mosquitto/log
  #   networks:
  #     - iot-net


  # RabbitMQ with MQTT and Web Management UI
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"      # AMQP
      - "15672:15672"    # Management UI
      - "1883:1883"      # MQTT
      - "15675:15675"    # Web MQTT over WebSockets
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - ./rabbitmq:/var/lib/rabbitmq
    command: >
      bash -c "
      rabbitmq-plugins enable --offline rabbitmq_mqtt &&
      rabbitmq-plugins enable --offline rabbitmq_web_mqtt &&
      rabbitmq-plugins enable --offline rabbitmq_web_stomp &&
      rabbitmq-plugins enable --offline rabbitmq_management &&
      rabbitmq-server
      "
    networks:
      - iot-net


  mqtt-subscriber:
    build:
      context: ./mqtt-subscriber
    volumes:
      - ./mqtt-subscriber:/app
    working_dir: /app
    command: ["python3", "mqtt_subscriber.py"]
    depends_on:
      - mongo
      - rabbitmq
    networks:
      - iot-net


networks:
  iot-net:
    driver: bridge

volumes:
  mongo_data:
    driver: local